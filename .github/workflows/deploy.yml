name: CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        pytest
  build-and-push:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/django-microservice:latest,${{ secrets.DOCKERHUB_USERNAME }}/django-microservice:${{ github.sha }}
    - name: Update kubernetes deployment
      env:
        EC2_IP: ${{ secrets.EC2_PUBLIC_IP }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts
        scp -i ~/.ssh/id_rsa -r . ec2-user@$EC2_IP:/home/ubuntu/
        ssh -i ~/.ssh/id_rsa ec2-user@$EC2_IP "sudo docker compose up -d"
        # scp -i ~/.ssh/id_rsa kubernetes/* ec2-user@$EC2_IP:/home/ubuntu/k8s/
        # ssh -i ~/.ssh/id_rsa ec2-user@$EC2_IP "kubectl apply -f /home/ubuntu/k8s/"
